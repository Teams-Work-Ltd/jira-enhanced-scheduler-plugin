#put any key/value pairs here
plugin.name=Jira enhanced scheduler
jes.title=Jira enhanced scheduler configuration
jes.description=You can configure Jira's underlying Caesium scheduler with an extra thread group here.
jes.description2=Caesium runs with 1 thread group with 4 threads by default. Using the configure option below will add another thread group with the number of threads you specify. For this to take effect, you must stop and start the scheduler.
jes.description3=For this to take effect, you must PAUSE and the START the scheduler.
jes.description4=This is useful if you have a lot of jobs that are running concurrently, and you want to allocate more resources without having to create and manage your own threads.
jes.description5=However, this will add more load to your Jira instance, so use with caution.

jes.thread.count=Threads to add:
jes.shutdown.extra.thread.group=Shutdown extra thread group
jes.save.label=Configure

jes.admin.label=Jira enhanced scheduler

jes.thread.count.label=Extra threads running:
jes.thread.group.name=Extra thread group name:
jes.default.thread.group.name=Default thread group name:
jes.thread.extra.group.started=Extra thread group started?
jes.scheduler.configure.title=1. Configure scheduler
jes.scheduler.reconfigured=Scheduler reconfigured?
jes.scheduler.manage.title=2. Manage scheduler
jes.scheduler.configure.context=Configure the scheduler with extra threads to handle the load. This will add a new thread group to the scheduler.
jes.invalid.thread.count=You may only set the thread count to a value between 1 and 16.
jes.thread.count.set=Thread count set to {0}.
jes.scheduler.reconfigured.state=Scheduler has been reconfigured? {0}.
jes.scheduler.paused=Scheduler has been paused.
jes.scheduler.started=Scheduler has been resumed.
jes.scheduler.info.title=3. Scheduler information
jes.scheduler.start.stop.context=Toggling this switch will pause or start the scheduler. When the scheduler is paused, scheduled jobs will NOT be executed. Restarting the scheduler after reconfiguration will create new scheduling threads.
jes.scheduler.thread.group.context=We recommend stopping the scheduler before destroying the thread group. Note, this is a destructive action and any running jobs will be interrupted if they have not finished before you destroy the group. The scheduler will restart jobs once started.
es.thread.group.destroyed=Thread group destroyed: {0}
jes.thread.group.not.started=Not started.
jes.thread.group.terminated={0} (Terminated).